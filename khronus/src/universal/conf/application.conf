khronus {
  endpoint = "127.0.0.1"
  port = 9290

  endpoint = ${?HOST}
  port = ${?PORT}

  windows {
    durations = [30 seconds, 1 minute, 5 minutes, 10 minutes, 30 minutes, 1 hour]
  }

  histogram {
    bucket-retention-policy = 6 hours
    summary-retention-policy = 90 days
    bucket-limit = 30000
    bucket-fetch-size = 1000
    summary-limit = 1000
    summary-fetch-size = 200
  }

  counter {
    bucket-retention-policy = 6 hours
    summary-retention-policy = 90 days
    bucket-limit = 30000
    bucket-fetch-size = 1000
    summary-limit = 1000
    summary-fetch-size = 200
  }

  dashboards {
    min-resolution-points = 700
    max-resolution-points = 1500
  }

  master {
    tick-expression = "0/30 * * * * ?"
    discovery-start-delay = 1 second
    discovery-interval = 5 seconds
  }

  cassandra {
    cluster {
      port = 9042
      seeds = "127.0.0.1"
      port = 9042
    }
  }
}

akka {
  extensions = ["com.searchlight.khronus.influx.Influx"]

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  stdout-loglevel = INFO

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    deployment {
      /user/master/workerRouter {
        router = round-robin
        supervisor-strategy = "com.searchlight.khronus.cluster.RouterSupervisorStrategy"
        nr-of-instances = 300
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 100
          allow-local-routees = on
        }
      }
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = ${khronus.endpoint}
      port = 2551
      port = ${?CLUSTER_PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://khronus-system@127.0.0.1:2551",
      "akka.tcp://khronus-system@127.0.0.1:2552",
    ]
    roles = ["master"]

    auto-down-unreachable-after = 60s
  }
}

spray.can.server {
  request-timeout = 3s
}
